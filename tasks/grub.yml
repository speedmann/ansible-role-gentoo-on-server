---
- name: Get devicename for crypt
  set_fact:
    crypt_device: "{% if configure_raid == True %}/dev/md/crypt{% else %}/dev/sda3{% endif %}"

- name: Remount /dev to get /dev/mapper visible
  command: mount --rbind /dev /mnt/gentoo/dev

- name: Install grub to boot drive
  command: chroot /mnt/gentoo bash -c 'source /etc/profile; grub-install /dev/sda'

- name: Get luks uuid
  command: cryptsetup luksUUID {{ crypt_device }}
  register: luks_uuid
  changed_when: False
  check_mode: no
  become: yes

- name: Assemble grub config line
  set_fact:
    grub_cli_param: rd.neednet=1 rd.luks.uuid={{ luks_uuid.stdout }} rd.lvm.vg={{ inventory_hostname_short }} ip={{ ansible_default_ipv4.address }}/{{ (ansible_default_ipv4.address+"/"+ansible_default_ipv4.netmask)|ipaddr('prefix') }}::{{ ansible_default_ipv4.gateway }}:{{ ansible_default_ipv4.netmask }}:{{ inventory_hostname }}:{{ ansible_default_ipv4.interface }}:off{% if gateway_not_in_subnet == True %} rd.route={{ ansible_default_ipv4.gateway }}/32:{{ ansible_default_ipv4.gateway }}:{{ ansible_default_ipv4.interface }} {% else %}{% endif %}

- name: Configure grub
  lineinfile:
    path: /mnt/gentoo/etc/default/grub
    line: "{{ item.line }}"
    regexp: "{{ item.regexp }}"
  with_items:
  - line: GRUB_ENABLE_CRYPTODISK=Y
    regexp: ^GRUB_ENABLE_CRYPTODISK=
  - line: GRUB_CMDLINE_LINUX="{{ grub_cli_param }}"
    regexp: ^GRUB_CMDLINE_LINUX=
  become: yes

- name: Make grub config
  command: chroot /mnt/gentoo bash -c 'source /etc/profile; grub-mkconfig -o /boot/grub/grub.cfg'
  become: yes
